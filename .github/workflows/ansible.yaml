name: Ansible Playbook

on:
  workflow_dispatch:
    inputs:
      vm1_ip:
        description: 'VM-1 IP Address'
        required: true
      vm2_ip:
        description: 'VM-2 IP Address'
        required: true

jobs:
  replace_ips:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Bash
      uses: actions/setup-python@v4
      with:
        python-version: 3.11.7

    - name: Set execute permissions
      run: chmod +x replace_ips.sh

    - name: Run IP Replacement Script
      run: |
        ./replace_ips.sh "${{ github.event.inputs.vm1_ip }}" "${{ github.event.inputs.vm2_ip }}"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: hosts
        path: ansible/hosts

  set_priv_key:
    needs: replace_ips
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Bash
      uses: actions/setup-python@v4
      with:
        python-version: 3.11.7

    - name: Set private key
      run: echo "${{ secrets.SSH_PRIV_KEY }}" > private_key.pem  

    - name: Set permissions for private key
      run: chmod 400 private_key.pem

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: private_key
        path: private_key.pem
    

  deploy:
    needs: set_priv_key
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: hosts
        path: ansible

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: private_key
        path: .

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ansible

    - name: Set execute permissions
      run: |
        mkdir -p ~/.ssh
        chmod 600 private_key.pem
        ssh-keyscan -H ${{ github.event.inputs.vm1_ip }} >> ~/.ssh/known_hosts
        ssh-keyscan -H ${{ github.event.inputs.vm2_ip }} >> ~/.ssh/known_hosts

    - name: Make vault password file
      run: |
        echo "${{ secrets.ANSIBLE_VAULT_PASSWORD }}" > ansible/vault_password

    - name: Debug
      run: |
        cat ansible/vault_password
        ls -al ansible
        

    - name: Run Ansible Playbook
      env:
        ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
        ANSIBLE_CONFIG: ansible/ansible.cfg
      run: |
        ansible-playbook --private-key private_key.pem  -vv ansible/infra.yaml
